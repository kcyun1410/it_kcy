1-2
Html에서 vuejs 쓰는방법은 <head>태그 안에
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js></script>
추가함(출처: 공식 홈페이지)

vue,react는 한 화면에서 주소가 바뀌지 않고 여러가지 처리를 함
그래서 어느 부분이 바뀌는지 정하는 것이 매우 중요

v-if와 v-else는 붙어있어야 함 < 중간에 다른 것이 추가되면(v-else-if제외) 오류가 일어남>

---------------------------------------------------------------------------------------------------

1-3

바뀌는 부분은 DATA라고 생각.
화면 출력시 바뀌는 부분도 data지만 input 하는 곳(입력칸)도 data

data를 html에 text타입으로 접근 할 시 {{data명}}으로 접근가능

---------------------------------------------------------------------------------------------------
2-1 

반복되는 부분은 컴포넌트로 만든다.

data의 중복을 방지하기 위해 컴포넌트에의 데이터는 ()함수형 이어야 하고
해당 data를 리턴해주어야한다.

컴포넌트의 template는 하나의 태그 안에 (동등한 위치) 있어야 한다.

동일 컴포넌트라도 각자의 data를 가진다.(하나의 독립적인 오브젝트라고 생각하기)

컴포넌트는 인스턴스보다 위에
스크립트는 div#root보다는 아래에

--------------------------------------------------------------------------------------------------

2-3

props를 컴포넌트 태그에 설정할때 오류 (Html 부분의 props 명은 케밥케이스(kebab-case)로 작성되어야 함)
Prop "props 명" is passed to component <Anonymous>, but the declared prop name is "props 명".
->Html 부분의 props 명을 변경해 줘야한다. (EX: startWord -> start-Word[-추가])
javascript부분의 props 명은 카멜케이스여도 괜찮다. ==>component명도 동일

---------------------------------------------------------------------------------------------------
3-1
웹팩은 스크립트가 너무 많아지면 관리와 수정이 어렵기 때문에
하나로 합쳐주려고 사용

Terminal 윈도우 조작
nodejs 버전 확인 명령어 : node -v
npm 버전확인 : npm -v
npm 패키지 다운로드 : npm init 패키지명
vue 패키지 다운로드 : npm install vue 또는 npm i vue
웹팩 다운로드 : npm i webpack webpack-cli -D
(-D대신 --save-dev도 가능[-D는 디벨롭환경에서만 쓰겠다는 명령어])

webpack.config.js 에는 webpack에 대한 설정을 적음
webpack 설정은 크게 4가지가 있음(entry, module, plugins, output)

package 만드는법
Terminal 에서 
웹팩을 돌리는 명령어: webpack
명령어 : npm run 스크립트 이름(EX: npm run "webpack")

node 에서 절대경로 설정을 도와주는 함수(path)가 있음
const path = require(id: 'path');

---------------------------------------------------------------------------------------------------

3-3

main.js 를 중심으로 다른 스크립트를 모아 연결함.
Vue 파일은 main.js에 import로 불러옴.

npm run build 실행시 프로세스
1. webpack.config.js에서 entry를 확인(스크립트를 모아둔 js파일 경로 확인)
2. main.js에서 import를 위에서 부터 읽음
*읽어오는 파일이 javascript가 아닐경우 에러 발생*(webpack은 기본적으로 javascript만 모아줌)
 => 에러 발생 시 rules를 추가해야함.(/\.vue$/ 정규식 추가 후 vue-loader 다운로드)
3. 문제가 있을 시 module의 rules가 대신 처리
4. plugins이 output 전 한번 더 처리
5. output 최종 결과물 출력

- npm run build 실행에러 발생 시
	에러메세지 확인 후 코드 추가 또는 다운로드 받아야 될 때가 있음

require와 import의 차이
노드환경에서는 require(id), Vue환경에서는 import

vue 와 vue-template-compiler는 버전이 똑같아야 한다.(package.json에서 확인가능)
=>만약 다를경우 Terminal 윈도우에서 npm i vue@버전(EX 2.7.0)을 입력

webpack 추가 설정 
- mode: '모드 상태' (EX. 개발할때는 'Development', 배포할 때는 'production'
- devtool: ' ' 
(EX. 개발할 때는 'eval', 배포할 때는 'hidden-source-map')
eval로 설정하면 웹팩이 빌드하는 속도가 빨라짐.
- resolve:{extensions: ['확장자', '확장자']}
	확장자 처리(EX. '.js', '.vue')

--------------------------------------------------------------------------------------------------------

3-4
v-on 은 @ 으로 생략가능
form submit.prevent로 생략가능
